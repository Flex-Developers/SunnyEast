@page "/Category"
@using Application.Contract.ProductCategory.Responses
@using Client.Infrastructure.Services.Category
@inject ICategoryService CategoryService

<MudContainer Class="animated-content">
    <MudText Typo="Typo.h3" Align="Align.Center" Style="margin-top: 50px;" Class="fade-in title">Категория товаров</MudText>
    <MudGrid Class="fade-in mt-lg-5 category-grid" Justify="Justify.Center" Spacing="10">
        @if (_categories != null && _categories.Any())
        {
            @foreach (var category in _categories!)
            {
                <MudItem xs="12" sm="6" md="6" lg="4">
                    <MudCard Elevation="15" Class="category-card" @onclick="() => NavigateToProducts(category.Name)">
                        <MudCardMedia Image="@category.ImageUrl" Class="category-card-image"/>
                        <MudCardContent Class="category-card-content">
                            <MudText Class="category-card-text" Typo="Typo.h5">@category.Name</MudText>
                        </MudCardContent>
                    </MudCard>
                </MudItem>
            }
        }
    </MudGrid>
</MudContainer>

@code {
    private List<ProductCategoryResponse>? _categories;

    protected override async Task OnInitializedAsync()
    {
        _categories = await CategoryService.Get();
        StateHasChanged();
    }

    private void NavigateToProducts(string categorySlug)
    {
        Navigation.NavigateTo($"/products?category={categorySlug}");
    }

}

<style>
    .category-grid {
        max-width: 100%; /* Ограничиваем ширину, чтобы карточки не прижимались к краю */
        margin: 0 auto; 
    }


    .fade-in {
        animation: fadeIn 1s ease-in-out;
    }

    .animated-content {
        animation: fadeIn 1.5s ease-in-out;
    }

    @@keyframes fadeIn {
        from {
            opacity: 0;
            transform: translateY(20px);
        }
        to {
            opacity: 1;
            transform: translateY(0);
        }
    }

    .category-card {
        width: 100%;
        height: 280px; 
        transition: transform 0.3s ease, box-shadow 0.3s ease;
        position: relative;
        overflow: hidden;
        cursor: pointer;
        border-radius: 10px; 
        background-color: transparent;
        max-width: 350px;
        display: flex;
        flex-direction: column;
        justify-content: space-between;
    }


    .category-card:hover {
        transform: scale(1.05);
        box-shadow: 0 8px 15px rgba(0, 0, 0, 0.2);
    }

    .category-card:hover .category-card-image {
        opacity: 0.8;
    }

    .category-card-image {
        width: 100%;
        height: 100%;
        object-fit: cover; 
        transition: opacity 0.3s ease;
    }

    .category-card-content {
        position: absolute;
        bottom: 40%;
        left: 0;
        right: 0;
        background: rgba(0, 0, 0, 0.5);
        color: white;
        padding: 10px;
        text-align: center;
    }

    .category-card-text {
        font-size: 1.5rem;
        font-weight: bold;
    }
</style>