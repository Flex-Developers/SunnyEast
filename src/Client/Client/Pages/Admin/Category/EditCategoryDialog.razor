@using Client.Infrastructure.Services.Category
@using Application.Contract.ProductCategory.Commands
@using Severity = MudBlazor.Severity

@inject ICategoryService CategoryService

<MudDialog Class="category-dialog">
    <TitleContent>
        <MudText Typo="Typo.h6" Class="dialog-title">
            <MudIcon Icon="@Icons.Material.Filled.Edit" Class="mr-2 mb-n1"/>
            Изменить категорию
        </MudText>
    </TitleContent>

    <DialogContent>

        <MudTextField @bind-Value="Command.Name" Label="Название" Required="true" Class="dialog-text-field"/>

        <MudTextField @bind-Value="Command.ImageUrl" Label="Ссылка на изображение" AutoGrow="true" FullWidth="true"
                      Clearable="true" Class="dialog-text-field"/>

        @if (Command.Name != "Все продукты")
        {
            <MudNumericField T="byte?" Label="Скидка (%)" @bind-Value="Command.DiscountPercentage" Min="0" Max="100"
                             Immediate="true" FullWidth="true" Clearable="true"/>

            <MudCheckBox Style="margin-left: -15px" @bind-Value="Command.ApplyDiscountToAllProducts"
                         Label="Изменить также продукты со скидкой"
                         Color="Color.Secondary"
                         Class="checkbox-label">
            </MudCheckBox>

        
            <MudText Typo="Typo.h6" Class="variant-text">Варианты объема продукта:</MudText>

            <MudChipSet SelectionMode="SelectionMode.MultiSelection" @bind-SelectedValues="SelectedVolumes"
                        Ripple="true" CheckMark="true">
                @foreach (var volume in ProductVolumes)
                {
                    <MudChip Text="@volume" Variant="Variant.Text" Color="Color.Info">@volume</MudChip>
                }
            </MudChipSet>
        }

    </DialogContent>

    <DialogActions>
        <MudButton OnClick="@(Cancel)" Color="Color.Error" Variant="Variant.Outlined">Отмена</MudButton>
        <MudButton Color="Color.Primary" OnClick="@(async () => await UpdateAsync())">Сохранить</MudButton>
    </DialogActions>
</MudDialog>

@code {

    [CascadingParameter] MudDialogInstance MudDialog { get; set; } = null!;
    [Parameter] public required UpdateProductCategoryCommand Command { get; set; }
    [Parameter] public Action OnSuccess { get; set; } = null!;

    private IReadOnlyCollection<string> SelectedVolumes { get; set; } = new HashSet<string>();

    private string[] ProductVolumes =
    {
        "100 Г", "300 Г", "500 Г", "1 Кг", "2 Кг", "3 Кг", "5 Кг", "100 мл", "300 мл",
        "500 мл", "1 Л", "2 Л", "3 Л", "5 Л", "1 шт", "2 шт", "3 шт", "5 шт",
    };


    protected override void OnParametersSet()
    {
        if (Command.ProductVolumes != null && Command.ProductVolumes.Any())
        {
            SelectedVolumes = new HashSet<string>(Command.ProductVolumes);
        }
    }

    private void Cancel()
    {
        MudDialog.Close(DialogResult.Cancel());
    }

    private async Task UpdateAsync()
    {
        if (!string.IsNullOrWhiteSpace(Command.Name))
        {
            if (SelectedVolumes.Count > 5)
            {
                Snackbar.Add("Можно выбрать максимум 5 объемов.", Severity.Warning);
                return;
            }

            if (SelectedVolumes.Count < 3)
            {
                Snackbar.Add("Нужно выбрать минимум 3 объема.", Severity.Warning);
                return;
            }

            Command.ProductVolumes = SelectedVolumes.ToArray();
            var success = await CategoryService.Put(Command);
            if (success)
            {
                MudDialog.Close();
                OnSuccess?.Invoke();
                Snackbar.Add($"\"{Command.Name}\" изменён!", Severity.Success);
            }
        }
    }

}

<style>
    .category-dialog {
        width: 95%;
        max-width: 600px;
    }

    .dialog-title {
        display: flex;
        align-items: center;
        font-weight: 300;
        margin-bottom: 16px;
    }

    .dialog-text-field {
        margin-bottom: 16px;
        width: 100%;
    }

    .checkbox-label {
        padding-left: -15px;
        width: 100%;
        justify-content: flex-start;
    }

    .variant-text {
        text-align: center;
        padding-top: 2%;
        padding-bottom: 2%
    }
</style>
