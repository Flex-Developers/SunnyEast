@page "/admin/category"
@using Application.Contract.ProductCategory.Responses
@using Client.Components.Dialogs
@using Client.Infrastructure.Services.Category
@using Application.Contract.ProductCategory.Commands

@inject IDialogService DialogService
@inject ICategoryService CategoryService


<MudTable Items="@_categories" Hover="true" SortLabel="Sort By">
    <ToolBarContent>
        <MudSpacer/>
        <MudButton StartIcon="@Icons.Material.Filled.Add" OnClick="@(async () => await AddAsync())">Добавить</MudButton>
    </ToolBarContent>
    <HeaderContent>
        <MudTh>
            <MudTableSortLabel SortBy="new Func<ProductCategoryResponse, object>(x => x.Name)">Имя</MudTableSortLabel>
        </MudTh>
        <MudTh>
            <MudText>Изменить</MudText>
        </MudTh>
        <MudTh>
            <MudText>Удалить</MudText>
        </MudTh>
    </HeaderContent>
    <RowTemplate>
        <MudTd>@context.Name</MudTd>
        <MudTd DataLabel="Изменить">
            <MudButton OnClick="@(async () => await EditAsync(new UpdateProductCategoryCommand { Name = context.Name, Slug = context.Slug, BaseCategorySlug = context.BaseCategorySlug }))">Изменить</MudButton>
        </MudTd>
        <MudTd DataLabel="Удалить">
            <MudButton OnClick="@(async () => await DeleteAsync())">Изменить</MudButton>
        </MudTd>
    </RowTemplate>
    <PagerContent>
        <MudTablePager PageSizeOptions="new[] { 10, 25, 50, 100 }"/>
    </PagerContent>
</MudTable>

@code {
    private List<ProductCategoryResponse>? _categories;

    protected override async Task OnInitializedAsync()
    {
        _categories = await CategoryService.Get();
    }

    private async Task AddAsync()
    {
        await DialogService.ShowAsync<CreateCategoryDialog>();
    }

    private async Task EditAsync(UpdateProductCategoryCommand updateCommand)
    {
        await DialogService.ShowAsync<EditCategoryDialog>("",
            new DialogParameters { { "Command", updateCommand } });
    }

    private async Task DeleteAsync()
    {
        await DialogService.ShowAsync<DeleteConfirmation>("",
            new DialogParameters { { "ContentText", "Вы хотите удалить?" } }
            , new DialogOptions
            {
                CloseButton = true
            });
    }
}