@page "/admin/orders"
@attribute [Authorize(Roles = "Administrator,Salesman")]

@using Application.Contract.Enums
@using Application.Contract.Order.Responses
@using Client.Components.Common
@using Client.Infrastructure.Services.Order
@using Microsoft.AspNetCore.Authorization
@using Severity = MudBlazor.Severity
@inject IOrderService OrderService
@inject ISnackbar Snackbar

<MudPaper Class="mx-auto mt-4 pa-4" Style="max-width:1280px">

    <MudText Typo="Typo.h4" Align="Align.Center" Class="mb-4">
        Список заказов
    </MudText>

    <MudTable Items="_orders" Hover="true" Breakpoint="Breakpoint.Sm" Elevation="0"
              Dense="true" Bordered="true" FixedHeader="true"
              Filterable="true" Class="border rounded-lg">

        <ToolBarContent>
            <MudTextField @bind-Value="_search"
                          Placeholder="Поиск по № заказа / магазину…"
                          Adornment="Adornment.Start"
                          AdornmentIcon="@Icons.Material.Filled.Search"
                          Immediate="true"
                          Class="w-100" />
        </ToolBarContent>

        <HeaderContent>
            <MudTh SortBy="Slug">Номер</MudTh>
            <MudTh SortBy="ShopSlug">Магазин</MudTh>
            <MudTh SortBy="Status">Статус</MudTh>
            <MudTh Class="text-right" SortBy="Sum">Сумма</MudTh>
            <MudTh />
        </HeaderContent>

        <RowTemplate>
            <MudTd DataLabel="№ заказа">@context.Slug</MudTd>
            <MudTd DataLabel="Магазин">@context.ShopSlug</MudTd>
            <MudTd DataLabel="Статус"><OrderStatusChip Status="@context.Status" /></MudTd>
            <MudTd DataLabel="Сумма" Class="text-right">@context.Sum.ToString("N2") ₽</MudTd>
            <MudTd>
                <MudIconButton Icon="@Icons.Material.Filled.DoneAll"
                               Disabled="@(context.Status == OrderStatus.Issued)"
                               Color="Color.Primary"
                               Size="Size.Small"
                               Title="Выдать"
                               OnClick="@(() => Issue(context))" />
            </MudTd>
        </RowTemplate>

    </MudTable>
</MudPaper>

@code {
    private List<OrderResponse> _orders = [];
    private string? _search;

    protected override async Task OnInitializedAsync()
        => _orders = await OrderService.GetAsync(string.Empty);

    private async Task Issue(OrderResponse order)
    {
        await OrderService.UpdateStatusAsync(order.Slug, OrderStatus.Issued);
        order.Status = OrderStatus.Issued;
        Snackbar.Add($"Заказ {order.Slug} выдан", Severity.Success);
    }

    private bool FilterFunc(OrderResponse order)
        => string.IsNullOrWhiteSpace(_search)
           || order.Slug.Contains(_search, StringComparison.OrdinalIgnoreCase)
           || order.ShopSlug.Contains(_search, StringComparison.OrdinalIgnoreCase);
}
