@using Client.Infrastructure.Services.Category
@using Client.Infrastructure.Services.Product
@inject ICategoryService CategoryService
@inject IProductService ProductService
<MudForm Model="UpdateCommand" @ref="_form">
    <MudDialog Class="edit-dialog">
        <TitleContent>
            <MudText Typo="Typo.h6">
                <MudIcon Icon="@Icons.Material.Filled.Create" Class="mr-3 mb-n1"/>
                Изменить продукт
            </MudText>
        </TitleContent>

        <DialogContent>
            <MudSelect T="string" Required="true" RequiredError="Выберите категорию." Label="Категория"
                       AnchorOrigin="Origin.BottomCenter" @bind-Value="CategoryName" FullWidth="true">
                @foreach (var category in Categories)
                {
                    <MudSelectItem Value="@category">@category</MudSelectItem>
                }
            </MudSelect>
            <MudTextField Required="true" RequiredError="Название не может быть пустым!" Label="Название"
                          @bind-Value="UpdateCommand.Name" InputType="InputType.Text" FullWidth="true" Clearable="true"
                          AutoGrow="true"/>
            <MudGrid>

                
            </MudGrid>
            <MudTextField Label="Описание" @bind-Value="UpdateCommand.Description" InputType="InputType.Text"
                          Clearable="true" FullWidth="true" AutoGrow="true"/>

            <MudButton Color="Color.Success" Style="margin-left: -10px; margin-top: 10px"
                       hidden="@_showTable" OnClick="ShowImageTable" StartIcon="@Icons.Material.Filled.Create">
                Редактировать изображения
            </MudButton>

            @if (_showTable)
            {
                <MudGrid Style="padding-left: 25px; padding-top: 45px">
                    @foreach (var image in _images.Select((value, index) => new { value, index }))
                    {
                        <MudTextField HelperText="@((image.index + 1).ToString())" @bind-Value="_images[image.index]"
                                      Label="Url изображения"
                                      InputType="InputType.Url" InputMode="InputMode.url" Clearable="true"
                                      FullWidth="true" AutoGrow="true"
                                      Error="@_images[image.index].Contains(" ")"
                                      ErrorText="Ссылка не может содержать пробелы!" Immediate="true"/>
                    }
                </MudGrid>

                <div style="display: flex; justify-content: center; gap: 20px; margin-top: 20px;">
                    <MudButton OnClick="SaveImagesChanges" Color="Color.Primary" Variant="Variant.Filled"
                               Disabled="@_images.Any(url => url.Contains(" "))">
                        Сохранить изменения
                    </MudButton>
                    <MudButton OnClick="CancelImagesChanges" Color="Color.Error" Variant="Variant.Outlined">
                        Отменить изменения
                    </MudButton>
                </div>
            }
        </DialogContent>
        <DialogActions>
            <MudButton OnClick="Cancel">Отмена</MudButton>
            <MudButton Disabled="@_showTable" Color="Color.Primary" Variant="Variant.Filled" OnClick="EditAsync">
                Сохранить
            </MudButton>
        </DialogActions>
    </MudDialog>
</MudForm>

<style>
    .edit-dialog {
        width: 95%;
        max-width: 600px;
    }
</style>